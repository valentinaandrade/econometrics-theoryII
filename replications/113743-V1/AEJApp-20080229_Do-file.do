********************************Age Adjustment for national scarlet fever mortality rates - all races*******************************use "20080229_SFmortality.dta", clear*Multiply each age-specific SFMR by the proportion of the 1940 population in that age group#delimit ;for any 0 1 5 15 25 35 45 55 65 75 85 \any 0.015343 0.064718 0.170355 0.181677 0.1620660.139237 0.117811 0.080294 0.048426 0.017303 0.00277:gen tempX = mrX*Y;#delimit cr*Within each year, sum over all age groupsegen scarlet_fever_tot = rowtotal(temp0-temp85)*Adjust scale to deaths per 100,000replace scarlet_fever_tot = scarlet_fever_tot*10^5keep year scarlet_fever_totgsort yearsave "AgeAdjustedSFMR.dta", replace********************************Age Adjustment for national scarlet fever mortality rates by race*******************************use "20080229_SFmortality_Race.dta", clear*Multiply each age-specific SFMR by the proportion of the 1940 population in that age group#delimit ;for any 0 1 5 15 25 35 45 55 65 75 85 \any 0.015343 0.064718 0.170355 0.181677 0.1620660.139237 0.117811 0.080294 0.048426 0.017303 0.00277:gen tempX_w = mrX_w*Y;for any 0 1 5 15 25 35 45 55 65 75 85 \any 0.015343 0.064718 0.170355 0.181677 0.1620660.139237 0.117811 0.080294 0.048426 0.017303 0.00277:gen tempX_nw = mrX_o*Y;#delimit crforeach race in w nw {	*Within each year, sum over all age groups	egen scarlet_fever_`race' = rowtotal(temp0_`race'-temp85_`race')		*Adjust scale to deaths per 100,000	replace scarlet_fever_`race' = scarlet_fever_`race'*10^5}keep year scarlet_fever_w scarlet_fever_nwgsort yearsave "AgeAdjustedSFMR_Race.dta", replace*********************************Table 1: National and state-level mortality statistics********************************log using Table1_results.log, replace* Panel A (national-level) resultsuse "20080229_national_data.dta", clearsum  all_tot mmr influenza_pneumonia_total scarlet_fever_tot tuberculosis_total diabetes_total ///heart_total cancer_total mmr_w mmr_nw influenza_pneumonia_w influenza_pneumonia_nw scarlet_fever_w scarlet_fever_nw ///tuberculosis_w tuberculosis_nw if year==1920sum  all_tot mmr influenza_pneumonia_total scarlet_fever_tot tuberculosis_total diabetes_total ///heart_total cancer_total mmr_w mmr_nw influenza_pneumonia_w influenza_pneumonia_nw scarlet_fever_w scarlet_fever_nw ///tuberculosis_w tuberculosis_nw if year==1950sum  all_tot mmr influenza_pneumonia_total scarlet_fever_tot tuberculosis_total diabetes_total ///heart_total cancer_total mmr_w mmr_nw influenza_pneumonia_w influenza_pneumonia_nw scarlet_fever_w scarlet_fever_nw ///tuberculosis_w tuberculosis_nw if year>=1925&year<=1936sum  all_tot mmr influenza_pneumonia_total scarlet_fever_tot tuberculosis_total diabetes_total ///heart_total cancer_total mmr_w mmr_nw influenza_pneumonia_w influenza_pneumonia_nw scarlet_fever_w scarlet_fever_nw ///tuberculosis_w tuberculosis_nw if year>=1937&year<=1943* Panel B (state-level) results* All race results (based on 48 states)use "20080229_state_data.dta", clearsum  mmr infl_pneumonia_rate scarfever_rate tb_rate diabetes_rate heartd_rate cancer_rate ///if year>=1925&year<=1936sum  mmr infl_pneumonia_rate scarfever_rate tb_rate diabetes_rate heartd_rate cancer_rate ///if year>=1937&year<=1943* Race results (based on 18 states)use "20080229_state_race_data.dta", clearsort raceby race: sum  mmr flupneu_rate sf_rate tb_rate if year>=1925&year<=1936by race: sum  mmr flupneu_rate sf_rate tb_rate if year>=1937&year<=1943log close********************************** Table 2: Testing for year of trend break in national mortality series********************************use "20080229_national_data.dta", clearkeep if year>=1920 & year<=1950*/ Take log of mortality rates */gen lnall=ln(all_tot)gen lnflupneu=ln(influenza_pneumonia_total)gen lnmmr=ln(mmr)gen lnscarfever=ln(scarlet_fever_tot)gen lntb=ln(tuberculosis_total)*/ QLR Test - Table 2 Results */log using Table2_results.log, replacecap prog drop breaksprog breaks  args var	cap drop break 	cap drop sig 	cap drop fstat 	cap drop maxf	gen sig=.gen fstat=.tsset year*test breaklocal i=33while `i'<=42 {cap drop y19`i' qui gen y19`i'=(year>=19`i')qui newey d.`var' y19`i', lag(2)qui replace fstat=e(F) if year==19`i'qui test y19`i' qui replace sig=r(p) if year==19`i'local i=`i' +1}qui egen maxf=max(fstat) qui gen break=year if fstat==maxflist `var' year break fstat sig if break!=.endbreaks lnallbreaks lnmmrbreaks lnflupneubreaks lnscarfeverbreaks lntblog close********************************** Table 3: Effect of sulfa drugs using national-level time series by disease, 1925-1943********************************use "20080229_national_data.dta", cleardrop if year<1925|year>1943*/ Take log of mortality rates */gen lnall=ln(all_tot)gen lnflupneu=ln(influenza_pneumonia_total)gen lnmmr=ln(mmr)gen lnscarfever=ln(scarlet_fever_tot)gen lntb=ln(tuberculosis_total)sort yeartsset yeargen post37=(year>1936)gen year_c=(year-1937)gen post37Xyear_c=post37*year_c* Table 3 Results newey lnall post37 year_c, lag(2)estimates store a1newey lnall post37 year_c post37Xyear_c, lag(2)estimates store a2newey lnmmr post37 year_c, lag(2)estimates store a3newey lnmmr post37 year_c post37Xyear_c, lag(2)estimates store a4newey lnflupneu post37 year_c, lag(2)estimates store a5newey lnflupneu post37 year_c post37Xyear_c, lag(2)estimates store a6newey lnscarfever post37 year_c, lag(2)estimates store a7newey lnscarfever post37 year_c post37Xyear_c, lag(2)estimates store a8newey lntb post37 year_c, lag(2)estimates store a9newey lntb post37 year_c post37Xyear_c, lag(2)estimates store a10outreg2 [a*] using Table3_results, replace********************************* Table 4: Effect of sulfa drugs on mortality for "treated" dieases, 1937-1943* Uses national (Panel A) and state (Panels B and C) data********************************* Panel A (national-level) results use "20080229_national_data.dta", cleardrop if year<1925|year>1943* Reshape datarename mmr d1rename influenza_pneumonia_total d2rename scarlet_fever_tot d3rename tuberculosis_total d4reshape long d, i(year) j(disease) label define disease 1"mmr" 2"influ_pneumonia" 3"scarfever" 4"tb"  label values disease diseaserename d m_rategen lnm_rate=ln(m_rate)gen treated=(disease==1|disease==2|disease==3)gen post37=(year>=1937)gen year_c=(year-1937)gen treatedXyear_c=treated*year_cgen treatedXpost37=treated*post37gen treatedXyear_cXpost37=treated*year_c*post37reg lnm_rate treatedXpost37 treatedXyear_c treated year_c post37 if disease==1|disease==4, restimates store a1reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated year_c post37 if disease==1|disease==4, restimates store a2reg lnm_rate treatedXpost37 treatedXyear_c treated year_c post37 if disease==2|disease==4, restimates store a3reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated year_c post37  if disease==2|disease==4, restimates store a4reg lnm_rate treatedXpost37 treatedXyear_c treated year_c post37  if disease==3|disease==4, restimates store a5reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated year_c post37 if disease==3|disease==4, restimates store a6outreg2 [a*] using Table4_PanelA, replace * Panel B (state-level) results use "20080229_state_data.dta", cleardrop if (year<1925|year>1943)keep state year mmr infl_pneumonia_rate scarfever_rate tb_rate rename mmr d1rename infl_pneumonia_rate d2rename scarfever_rate d3rename tb_rate d4reshape long d, i(state year) j(disease) label define disease 1"mmr" 2"influ_pneumonia" 3"scarfever" 4"tb"label values disease diseaserename d m_rategen lnm_rate=ln(m_rate)ta disease, gen(dis)gen treated=(disease<4)gen post37=(year>=1937)gen treatedXpost37=treated*post37gen year_c=(year-1937)gen treatedXyear_c=treated*year_cgen treatedXyear_cXpost37=treated*year_c*post37egen statepost=group(state post37)xi i.statepost*yearegen diseaseyear=group(disease year)xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if disease==1|disease==4, absorb(statepost)  cluster(diseaseyear)estimates store a1xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated  i.statepost*year if disease==1|disease==4, cluster(diseaseyear)estimates store a2xi: areg lnm_rate  treatedXyear_c treatedXpost37 treated year_c if disease==2|disease==4, absorb(statepost) cluster(diseaseyear)estimates store a3xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated  i.statepost*year if disease==2|disease==4, cluster(diseaseyear)estimates store a4xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if disease==3|disease==4, absorb(statepost) cluster(diseaseyear)estimates store a5xi: reg lnm_rate treatedXyear_c treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year if disease==3|disease==4, cluster(diseaseyear)estimates store a6outreg2 [a*] using Table4_PanelB, replace* For Panel C (state-level) Results, use above code for Table 4, Panel B, but exclude years 1935-1937 ********************************* Table 5: Urban-state differences in the effect of sulfa drugs on MMR********************************* We are not able to provide public access to the city-level data set. The city-level data can be * obtained from vital statistics records. The following code was used for the city-level data set provided* to us by Melissa Thomasson. * use "Thomasson_Trebor_data.dta", clear* drop if state=="D.C."* Identify cities with pop > 25,000 in 1930 (i.e., cities with missing values in 1931)* gen Year31=(year==1931)* sort citycode3* by citycode3: egen sumid=sum(Year31)* drop if sumid==0 & (state!="TEXAS")* Drop city with double entry and discrepant MMR vales * drop if city=="HANOVER"* save "Thomasson_Trebor_Cities25k+.dta", replace* use "20080229_state_data.dta", clear* replace state="ALABAMA" if state == "Alabama" * replace state="ALASKA" if state == "Alaska" * replace state="ARIZONA" if state == "Arizona" * replace state="ARKANSAS" if state == "Arkansas" * replace state="CALIFORNIA" if state == "California" * replace state="COLORADO" if state == "Colorado" * replace state="CONNECTICUT" if state == "Connecticut" * replace state="DELAWARE" if state == "Delaware" * replace state="FLORIDA" if state == "Florida" * replace state="GEORGIA" if state == "Georgia" * replace state="HAWAII" if state == "Hawaii" * replace state="IDAHO" if state == "Idaho" * replace state="ILLINOIS" if state == "Illinois" * replace state="INDIANA" if state == "Indiana" * replace state="IOWA" if state == "Iowa" * replace state="KANSAS" if state == "Kansas" * replace state="KENTUCKY" if state == "Kentucky" * replace state="LOUISIANA" if state == "Louisiana"* replace state="MAINE" if state == "Maine"* replace state="MARYLAND" if state == "Maryland"* replace state="MASSACHUSETTS" if state == "Massachusetts"* replace state="MICHIGAN" if state == "Michigan"* replace state="MINNESOTA" if state == "Minnesota"* replace state="MISSISSIPPI" if state == "Mississippi"* replace state="MISSOURI" if state == "Missouri"* replace state="MONTANA" if state == "Montana"* replace state="NEBRASKA" if state == "Nebraska"* replace state="NEVADA" if state == "Nevada"* replace state="NEW HAMPSHIRE" if state == "New Hampshire"* replace state="NEW JERSEY" if state == "New Jersey"* replace state="NEW MEXICO" if state == "New Mexico"* replace state="NEW YORK" if state == "New York"* replace state="NORTH CAROLINA" if state == "North Carolina"* replace state="NORTH DAKOTA" if state == "North Dakota"* replace state="OHIO" if state == "Ohio"* replace state="OKLAHOMA" if state == "Oklahoma"* replace state="OREGON" if state == "Oregon"* replace state="PENNSYLVANIA" if state == "Pennsylvania"* replace state="RHODE ISLAND" if state == "Rhode Island"* replace state="SOUTH CAROLINA" if state == "South Carolina"* replace state="SOUTH DAKOTA" if state == "South Dakota"* replace state="TENNESSEE" if state == "Tennessee"* replace state="TEXAS" if state == "Texas"* replace state="UTAH" if state == "Utah"* replace state="VERMONT" if state == "Vermont"* replace state="VIRGINIA" if state == "Virginia"* replace state="WASHINGTON" if state == "Washington"* replace state="WEST VIRGINIA" if state == "West Virginia"* replace state="WISCONSIN" if state == "Wisconsin"* replace state="WYOMING" if state == "Wyoming"* drop if year<1928|year>1940* keep state year mmr* append using "Thomasson_Trebor_Cities25k+.dta"* gen city01=0* replace city01=1 if !mi(city)* replace tot_mmr=mmr if city01==0* gen lnmmr=ln(tot_mmr)* Drop state-year obs. (originating from state-level dataset) with no city/year obs. */* drop if state=="SOUTH DAKOTA"* drop if state=="NORTH DAKOTA"&year<1930* drop if state=="NEW MEXICO"&year<1930* drop if state=="MISSISSIPPI"&year<1930* drop if state=="NEVADA"* drop if state=="IDAHO"* drop if state=="VERMONT"* drop if state=="WYOMING"*/Drop cities/states with too few data points */* drop if state=="TEXAS"* drop if city=="SANTA ANA"|city=="WEST HARTFORD"|city=="WEST HAVEN"|city=="CICERO"|city=="BELLEVILLE"* keep  year lnmmr mmr state city citycode3 tot_mmr city01* gen post37=(year>=1937)* gen year_c=year-1937* gen year_cXpost37=year_c*post37* gen urban=city01* gen urbanXyear_c=city01*year_c* gen urbanXpost37=city01*post37* gen urbanXyear_cXpost37=city01*year_c*post37* egen stateyear=group(state year)* egen statepost=group(state post37)* areg lnmmr urbanXyear_c urbanXpost37 urban year_c, absorb(statepost) cluster(stateyear)* estimates store a1* xi: reg lnmmr urbanXyear_cXpost37 urbanXyear_c urbanXpost37 urban i.statepost*year_c, cluster(stateyear) * estimates store a2* outreg2 [a*] using Table5_results, replace * For Table 5, Panel B, use above code, but exclude years 1935-1937* Create Figure 5* bysort city01 year: egen lnmmr_mean=mean(lnmmr)* tsline lnmmr_mean if city01==1, xline(1937) || tsline lnmmr_mean if city01==0********************************* Table 6:  Racial differences in the effect of sulfa drugs on mortality, 1937-43 ********************************use "20080229_state_race_data.dta", clearkeep state statenum year race mmr flupneu_rate sf_rate tb_raterename mmr d1rename flupneu_rate d2rename sf_rate d3rename tb_rate d4reshape long d, i(statenum year race) j(disease) label define disease 1"mmr" 2"influ_pneumonia" 3"scarlet_fever" 4"tb" label values disease diseaserename d m_rategen lnm_rate=ln(m_rate)gen treated=(disease<4)drop if year<1925|year>1943gen post37=(year>=1937)gen black=(race=="other")gen year_c=year-1937gen treatedXyear_c=treated*year_cgen treatedXpost37=treated*post37gen treatedXblack=treated*blackgen treatedXyear_cXpost37=treated*year_c*post37gen treatedXyear_cXblack=treated*year_c*blackgen treatedXyear_cXpost37Xblack=treated*year_c*post37*blackgen treatedXpost37Xblack=treated*post37*blackgen year_cXblack=year_c*blackgen year_cXpost37=year_c*post37gen blackXyear_cXpost37=black*year*post37egen statepost = group (state post37)egen blackstatepost = group(black statepost)xi i.statepost*yearegen diseaseyear=group(disease year)*/ Flag states to drop in scarlet fever model due to several state/year observations with zero mortality for blacks */gen dropstate=(disease==3&(statenum==3|statenum==7|statenum==8|statenum==16|statenum==38|statenum==46))* Panel A results - Whites only xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="white"  & (disease==1|disease==4), absorb(statepost) cluster(diseaseyear)estimates store a1xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year  if race=="white" & (disease==1|disease==4), cluster(diseaseyear)estimates store a2xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="white" & (disease==2|disease==4), absorb(statepost) cluster(diseaseyear)estimates store a3xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year  if race=="white" & (disease==2|disease==4), cluster(diseaseyear)estimates store a4xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="white" & dropstate==0&(disease==3|disease==4), absorb(statepost) cluster(diseaseyear)estimates store a5xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year  if race=="white" & dropstate==0 & (disease==3|disease==4), cluster(diseaseyear)estimates store a6outreg2 [a*] using Table6_PanelA, replace* Panel B results - Blacks onlyxi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="other" & (disease==1|disease==4), absorb(statepost)  cluster(diseaseyear)estimates store a1xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year if race=="other" & (disease==1|disease==4), cluster(diseaseyear)estimates store a2xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="other" & (disease==2|disease==4), absorb(statepost)  cluster(diseaseyear)estimates store a3xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year if race=="other" & (disease==2|disease==4),  cluster(diseaseyear)estimates store a4xi: areg lnm_rate treatedXyear_c treatedXpost37 treated year_c if race=="other"& dropstate==0 & (disease==3|disease==4), absorb(statepost) cluster(diseaseyear)estimates store a5xi: reg lnm_rate treatedXyear_cXpost37 treatedXyear_c treatedXpost37 treated i.statepost*year if race=="other" & dropstate==0& (disease==3|disease==4),  cluster(diseaseyear)estimates store a6outreg2 [a*] using Table6_PanelB, replace* Panel C results - Fully interacted models areg lnm_rate treatedXyear_cXblack treatedXpost37Xblack treatedXblack treatedXpost37 year_cXblack treatedXyear_c treated year_c ///if disease==1|disease==4, absorb(blackstatepost)  cluster(diseaseyear)estimates store a1xi: reg lnm_rate treatedXyear_cXpost37Xblack treatedXyear_cXblack treatedXpost37Xblack treatedXblack blackXyear_cXpost37 treatedXyear_cXpost37 ///treatedXpost37 treatedXyear_c treated i.blackstatepost*year if disease==1|disease==4, cluster(diseaseyear)estimates store a2areg lnm_rate treatedXyear_cXblack treatedXpost37Xblack treatedXblack treatedXpost37 year_cXblack treatedXyear_c treated year_c ///if disease==2|disease==4, absorb(blackstatepost)  cluster(diseaseyear)estimates store a3xi: reg lnm_rate treatedXyear_cXpost37Xblack treatedXyear_cXblack treatedXpost37Xblack treatedXblack blackXyear_cXpost37 treatedXyear_cXpost37 ///treatedXpost37 treatedXyear_c treated i.blackstatepost*year if disease==2|disease==4,  cluster(diseaseyear)estimates store a4xi: areg lnm_rate treatedXyear_cXblack treatedXpost37Xblack treatedXblack treatedXpost37 year_cXblack treatedXyear_c treated year_c ///if (disease==3|disease==4) & dropstate==0 , absorb(blackstatepost)  cluster(diseaseyear)estimates store a5xi: reg lnm_rate treatedXyear_cXpost37Xblack treatedXyear_cXblack treatedXpost37Xblack treatedXblack blackXyear_cXpost37 treatedXyear_cXpost37 ///treatedXpost37 treatedXyear_c treated i.blackstatepost*year if (disease==3|disease==4 ) & dropstate==0 ,  cluster(diseaseyear)estimates store a6outreg2 [a*] using Table6_PanelC, replace*********************************  Table A1: Robustness check: Difference-in-difference regressions, dropping 1935-1936********************************* For Panel A results, use code for Table 4, Panel B, but exclude years 1935-1936* For Panel B results, use code for Table 5, Panel A, but exclude years 1935-1936**********************************  Table A2: Robustness check: Racial differences, dropping 1935-1937********************************* For Panel A results, use code for Table 6, Panel A, but exclude years 1935-1937* For Panel B results, use code for Table 6, Panel B, but exclude years 1935-1937* For Panel C results, use code for Table 6, Panel C, but exclude years 1935-1937